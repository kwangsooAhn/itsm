@import "../template/buttons";

// 구글 로그인
// 카카오 로그인
.#{$common-prefix}button {
  @each $theme, $value in $button-themes-portal {
    &.#{$theme} {
      color: map-get($value, 'default', 'font');
      background-color: map-get($value, 'default', 'background');
      border-color: map-get($value, 'default', 'border');
      @if (map-get($value, 'default', 'shadow') != null) {
        box-shadow: map-get($value, 'default', 'shadow');
      }

      @if $theme == 'google' {
        @include backgroundImage($icon-folder-path + 'login/icon_google.svg', 1.5rem, no-repeat, 0.875rem, center, null); // 24px 14px
      } @else if $theme == 'kakao' {
        @include backgroundImage($icon-folder-path + 'login/icon_kakao.svg', 1.5rem, no-repeat, 0.875rem, center, null); // 24px 14px
      }

      &:focus {
        color: map-get($value, 'focus', 'font');
        background-color: map-get($value, 'focus', 'background');
        border-color: map-get($value, 'focus', 'border');
        @if map-get($value, 'focus', 'shadow') != null {
          box-shadow: map-get($value, 'focus', 'shadow');
        }
      }

      &:hover {
        color: map-get($value, 'hover', 'font');
        background-color: map-get($value, 'hover', 'background');
        border-color: map-get($value, 'hover', 'border');
        @if map-get($value, 'hover', 'shadow') != null {
          box-shadow: map-get($value, 'hover', 'shadow');
        }
      }

      &:enabled:active,
      &:enabled.active {
        color: map-get($value, 'active', 'font');
        background-color: map-get($value, 'active', 'background');
        border-color: map-get($value, 'active', 'border');
        @if map-get($value, 'active', 'shadow') != null {
          box-shadow: map-get($value, 'active', 'shadow');
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($value, 'disabled', 'font');
        background-color: map-get($value, 'disabled', 'background');
        border-color: map-get($value, 'disabled', 'border');
        @if map-get($value, 'disabled', 'shadow') != null {
          box-shadow: map-get($value, 'disabled', 'shadow');
        }

        @if $theme == 'google' {
          @include backgroundImage($icon-folder-path + 'login/icon_google_disabled.svg', 1.5rem, no-repeat, 0.875rem, center, null); // 24px 14px
        } @else if $theme == 'kakao' {
          @include backgroundImage($icon-folder-path + 'login/icon_kakao_disabled.svg', 1.5rem, no-repeat, 0.875rem, center, null); // 24px 14px
        }
      }
    }
  }
}

// 되돌아가기
.login-return {
  @include relative($top: 5rem, $right: 5rem); // 80px 80px
  color: $white;
  border-color: $white;
  padding: 0.75rem 3rem; // 12px 48px
}

// 로그인 되돌아가기
.signup-return {
  color: $white;
  border-color: $white;
  padding: 0.75rem 3rem; // 12px 48px
  margin-left: 2.5rem; // 40px
}

// 세션 Invalid > 로그인 되돌아가기
.session-return {
  margin-top: 6.25rem;
  background-color: $blue;
  color: $white;
  padding: 0.75rem 1.563rem; // 12px 25px
}

// 에러 발생시 이전 페이지로 돌아가기
.btn-error {
  color: $white;
  background-color: $blue;
}