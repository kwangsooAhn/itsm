/* _buttons.scss
 *
 * 적용 규칙  (자세한 건 UX팀 정승녕 팀장님과 협의)
 * (1) 버튼 1개인 경우 : Secondary
 * (2) 버튼 2개인 경우 : Primary + Secondary 혹은 Primary + Extra (두번째 옵션의 중요도에 따라)
 * (3) 버튼 3개 이상인 경우 : Primary + (n * Secondary)
 * (4) 버튼 외에 폼 양식을 포함할 경우
 *  - (4-1) 제출 버튼 하나만 있을 경우 : Primary
 *  - (4-2) 제출 외의 옵션이 있는 경우: (2)번 혹은 (3)번과 동일
 * (5) 버튼 외에 클릭하는 옵션이 그 옵션을 클릭함으로써 버튼을 클릭하지 않아도 되는 (혹은 클릭하지 못하는) 상황이 되는 경우: Secondary (아마 이 경우에는 버튼이 하나 뿐일 겁니다.)
 *
 * 파일 경로 : template/_buttons.scss
 * @description 버튼 디자인
 * @author wdj
 * @version 1.0
 */
// <a class='z-button'></a>  or <button class='z-button'>

$button-themes-default: (
        'primary': (
                'default': ('font': $white, 'background': $blue700, 'border' : $blue700),
                'hover': ('font' : $white, 'background': $blue600, 'border' : $blue600),
                'focus': ('font': $white, 'background': $blue700, 'border' : $blue700, 'shadow': 0 0 0 0.125rem $blue500),
                'active': ('font': $white, 'background': $blue800, 'border' : $blue800),
                'disabled': ('font': $gray400, 'background': $gray50, 'border' : $gray50)
        ),
        'secondary': (
                'default': ('font': $gray700, 'background': $gray200, 'border': $gray200),
                'hover': ('font' : $gray700, 'background': $gray100, 'border': $gray100),
                'focus': ('font': $gray700, 'background': $gray200, 'border': $blue500, 'shadow': 0 0 0 0.125rem $blue500),
                'active': ('font': $blue800, 'background': $blue300, 'border': $blue300),
                'disabled': ('font': $gray400, 'background': $gray50, 'border': $gray50)
        ),
        'danger': (
                'default': ('font': $white, 'background': $red500, 'border': $red500),
                'hover': ('font' : $white, 'background': $red400, 'border': $red400),
                'focus': ('font': $white, 'background': $red500, 'border': $red500, 'shadow': 0 0 0.125rem $red700),
                'active': ('font': $white, 'background': $red600, 'border': $red600),
                'disabled': ('font': $gray400, 'background': $gray50, 'border': $gray50)
        ),
        'warning': (
                'default': ('font': $blue800, 'background': $orange400, 'border': $orange400),
                'hover': ('font' : $blue800, 'background': $orange200, 'border': $orange200),
                'focus': ('font': $blue800, 'background': $orange400, 'border': $orange400, 'shadow': 0 0 0.125rem $orange600),
                'active': ('font': $blue800, 'background': $orange500, 'border': $orange500),
                'disabled': ('font': $gray400, 'background': $gray50, 'border': $gray50)
        ),
        'extra': (
                'default': ('font': $blue500, 'background': $white, 'border': $white),
                'hover': ('font' : $blue500, 'background': $blue100, 'border': $blue100),
                'focus': ('font': $blue500, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $blue700, 'background': $blue200, 'border': $blue200),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        ),
        'form': (
                'default': ('font': $neutral800, 'background': $neutral300, 'border': $neutral300),
                'hover': ('font' : $neutral800, 'background': $neutral200, 'border': $neutral200),
                'focus': ('font': $neutral800, 'background': $neutral300, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $neutral800, 'background': $neutral300, 'border': $neutral400),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        ),
        'default': (
                'default': ('font': $gray400, 'background': transparent, 'border': transparent),
        ),
        'error': (
                'default': ('font': $white, 'background': $red500, 'border': $red500),
        )
);
// 어두운 배경에서 사용되는 버튼 테마
$button-themes-light: (
        'light-primary': (
                'default': ('font': $white, 'background': $blue500, 'border': $blue500),
                'hover': ('font' : $white, 'background': $blue400, 'border': $blue400),
                'focus': ('font': $white, 'background': $blue500, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $white, 'background': $blue600, 'border': $blue700),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        ),
        'light-secondary': (
                'default': ('font': $white, 'background': hexToRGBA($white, 0.2), 'border': $white),
                'hover': ('font' : $white, 'background': hexToRGBA($white, 0.1), 'border': $white),
                'focus': ('font': $white, 'background': hexToRGBA($white, 0.1), 'border': $white, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $white, 'background': hexToRGBA($white, 0.4), 'border': $white),
                'disabled': ('font': $gray400, ' background': $neutral200, 'border': $neutral200)
        ),
        'light-extra': (
                'default': ('font': $white, 'background': transparent, 'border': transparent),
                'hover': ('font' : $white, 'background': hexToRGBA($white, 0.2), 'border': hexToRGBA($white, 0.2)),
                'focus': ('font': $white, 'background': transparent, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $white, 'background': hexToRGBA($white, 0.4), 'border': hexToRGBA($white, 0.4)),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        ),
        'light-form': (
                'default': ('font': $neutral800, 'background': $neutral300, 'border': $neutral300),
                'hover': ('font' : $neutral800, 'background': $neutral200, 'border': $neutral200),
                'focus': ('font': $neutral800, 'background': $neutral300, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $neutral800, 'background': $neutral300, 'border': $neutral400),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        )
);
// button group
// - button switch, button toggle
$button-group: (
        'default': ('font': $gray800, 'background': $white, 'border': $gray300),
        'hover': ('font' : $gray800, 'background': $blue100, 'border': $gray300),
        'focus': ('font': $gray800, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
        'active': ('font': $blue700, 'background': $blue200, 'border': $blue400),
        'selected': ('font': $blue500, 'background': $white, 'border': $blue500),
        'disabled': ('font': $gray400, 'background': $neutral200, 'border': $gray300)
);
//////////////////////////// Designer /////////////////////
// 열 속성 > tab button
$button-tab: (
        'default': ('font': $white, 'background': $white, 'border': $gray300),
        'hover': ('font' : $blue100, 'background': $blue100, 'border': $gray300 ),
        'focus': ('font': $white, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
        'active': ('font': $blue200, 'background': $blue200, 'border': $blue400),
        'selected': ('font': $blue500, 'background': $blue500, 'border': $blue500),
        'disabled': ('font': $neutral200, 'background': $neutral200, 'border': $neutral200)
);
// header > dropdown
$layout-header-dropdown: (
        'default': ('font': $gray800, 'background': $white, 'border': $white),
        'hover': ('font' : $gray800, 'background': $blue50, 'border': $blue50),
        'focus': ('font': $gray800, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
        'active': ('font': $blue700, 'background': $blue100, 'border': $blue100)
);
$element-icon: (
        'default': ('font': $gray600, 'icon': $gray500, 'background': $white, 'border': $gray300),
        'hover': ('font' : $gray600, 'icon': $gray600,  'background': $blue100, 'border': $gray300),
        'focus': ('font': $gray600, 'icon': $gray500, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
        'active': ('font': $blue700, 'icon': $blue700, 'background': $blue100, 'border': $blue400),
        'drag': ('font': $gray800, 'icon': $blue500, 'background': $white, 'border': $gray300, 'shadow': 0 0 0.125rem $gray300),
        'placeholder': ('font': $gray400, 'icon': $gray400, 'background': $neutral200, 'border': $gray300)
);
// 엘리먼트 아이콘 - 연결선, 배경이동 (토글 버튼)
$element-icon-toggle: (
        'default': ('font': $gray800, 'background': $white, 'border': $gray300),
        'hover': ('font' : $gray800, 'background': $blue100, 'border': $gray300),
        'focus': ('font': $gray800, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
        'active': ('font': $blue700, 'background': $blue200, 'border': $blue400),
        'selected': ('font': $blue500, 'background': $white, 'border': $blue500),
        'disabled': ('font': $gray400, 'background': $neutral200, 'border': $gray300)
);
//////////////////////////// portal ///////////////////////////
$button-themes-social: (
        'google': (
                'default': ('font': $gray800, 'background': $white, 'border': $gray300),
                'hover': ('font' : $gray800, 'background': $neutral200, 'border': $gray300),
                'focus': ('font': $gray800, 'background': $white, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $gray800, 'background': $neutral300, 'border': $gray400),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        ),
        'kakao': (
                'default': ('font': $gray800, 'background': $yellow500, 'border': $yellow600),
                'hover': ('font' : $gray800, 'background': $yellow400, 'border': $yellow600),
                'focus': ('font': $gray800, 'background': $yellow500, 'border': $blue600, 'shadow': 0 0 0.125rem $blue600),
                'active': ('font': $gray800, 'background': $yellow600, 'border': $yellow800),
                'disabled': ('font': $gray400, 'background': $neutral200, 'border': $neutral200)
        )
);

.z-button,
.z-button-icon,
.z-button-text {
  display: inline-block;
  font-family: $font-family;
  font-size: $font-size-xs;
  font-weight: $font-weight-semibold;
  background-color: transparent;
  line-height: 1;
  opacity: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  user-select: none;
  white-space: nowrap;
  overflow:visible;
  cursor: pointer;
  @include border(0rem, solid, transparent, all);
  @include borderRadius(0.25rem); // 4px
  padding: 0.625rem 1.25rem; // 10px 20px

  &:focus,
  &:hover {
    outline: 0;
  }
  &:disabled,
  &.disabled {
    cursor: default;
  }

  // 기본 테마별 버튼
  @each $theme, $value in $button-themes-default {
    &.#{$theme} {
      color: map-get($value, 'default', 'font');
      background-color: map-get($value, 'default', 'background');
      @if map-get($value, 'default', 'border') != null {
        border-color: map-get($value, 'default', 'border');
      }
      @if map-get($value, 'default', 'shadow') != null {
        box-shadow: map-get($value, 'default', 'shadow');
      }
      // 아이콘이 존재한다면
      .z-icon {
        display: block;
        background: map-get($value, 'default', 'font');
        pointer-events: none;
      }

      &:focus {
        color: map-get($value, 'focus', 'font');
        background-color: map-get($value, 'focus', 'background');
        @if map-get($value, 'focus', 'border') != null {
          border-color: map-get($value, 'focus', 'border');
        };
        @if map-get($value, 'focus', 'shadow') != null {
          box-shadow: map-get($value, 'focus', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'focus', 'font');
        }
      }

      &:hover {
        color: map-get($value, 'hover', 'font');
        background-color: map-get($value, 'hover', 'background');
        @if map-get($value, 'hover', 'border') != null {
          border-color: map-get($value, 'hover', 'border');
        };
        @if map-get($value, 'hover', 'shadow') != null {
          box-shadow: map-get($value, 'hover', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'hover', 'font');
        }
      }

      &:enabled:active,
      &:enabled.active {
        color: map-get($value, 'active', 'font');
        background-color: map-get($value, 'active', 'background');
        @if map-get($value, 'active', 'border') != null {
          border-color: map-get($value, 'active', 'border');
        }
        @if map-get($value, 'active', 'shadow') != null {
          box-shadow: map-get($value, 'active', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'active', 'font');
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($value, 'disabled', 'font');
        background-color: map-get($value, 'disabled', 'background');
        @if map-get($value, 'disabled', 'border') != null {
          border-color: map-get($value, 'disabled', 'border');
        }
        @if map-get($value, 'disabled', 'shadow') != null {
          box-shadow: map-get($value, 'disabled', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'disabled', 'font');
        }
      }
    }
  }

  // 어두운 배경에서 사용되는 버튼 테마
  @each $theme, $value in $button-themes-light {
    &.#{$theme} {
      color: map-get($value, 'default', 'font');
      background-color: map-get($value, 'default', 'background');
      border-color: map-get($value, 'default', 'border');
      @if map-get($value, 'default', 'shadow') != null {
        box-shadow: map-get($value, 'default', 'shadow');
      }
      // 아이콘이 존재한다면
      .z-icon {
        display: inline-block;
        background: map-get($value, 'default', 'font');
        pointer-events: none;
      }

      &:focus {
        color: map-get($value, 'focus', 'font');
        background-color: map-get($value, 'focus', 'background');
        border-color: map-get($value, 'focus', 'border');
        @if map-get($value, 'focus', 'shadow') != null {
          box-shadow: map-get($value, 'focus', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'focus', 'font');
        }
      }

      &:hover {
        color: map-get($value, 'hover', 'font');
        background-color: map-get($value, 'hover', 'background');
        border-color: map-get($value, 'hover', 'border');
        @if map-get($value, 'hover', 'shadow') != null {
          box-shadow: map-get($value, 'hover', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'hover', 'font');
        }
      }

      &:enabled:active,
      &:enabled.active {
        color: map-get($value, 'active', 'font');
        background-color: map-get($value, 'active', 'background');
        border-color: map-get($value, 'active', 'border');
        @if map-get($value, 'active', 'shadow') != null {
          box-shadow: map-get($value, 'active', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'active', 'font');
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($value, 'disabled', 'font');
        background-color: map-get($value, 'disabled', 'background');
        border-color: map-get($value, 'disabled', 'border');
        @if map-get($value, 'disabled', 'shadow') != null {
          box-shadow: map-get($value, 'disabled', 'shadow');
        }
        .z-icon {
          background: map-get($value, 'disabled', 'font');
        }
      }
    }
  }
}

.z-button-icon {
  padding: 0.4375rem; // 7px (버튼 기본 너비 높이 : 34px 34px)
  line-height: 0;
  &-sm {
    width: 1rem; // 16px
    height: 1rem; // 16px
    border: none;
    @include borderRadius(50%);
    padding: 0;
    background-color: $neutral300;
    cursor: pointer;
    .z-icon {
      width: 0.5rem;
      height: 0.5rem;
      margin: 0.25rem;
      background-color: $neutral800;
    }
    &:hover {
      background-color: $neutral200; // $gray500
    }
  }
}

.z-button-text {
  padding: 0;
  line-height: 1.25rem; // 20px
  color: $gray600;
  &:hover {
    @include underline;
    color: $gray400;
  }
  &:active,
  &focus {
    color: $gray800;
  }
  &:disabled,
  &.disabled {
    color: $gray300;
  }
}

// 버튼 목록
.z-button-list {
  display: inline-flex;
  vertical-align: middle;
  position: relative;

  .z-button,
  .z-button-icon {
    &:not(:last-child) {
      margin-right: 0.5rem; // 8px
    }
  }
}

// button group
// (1) button switch group : 버튼 그룹 중 하나의 버튼만 선택
// (2) button toggle group : 버튼 그룹 각 버튼 토글 가능
.z-button-switch-group,
.z-button-toggle-group {
  display: inline-flex;
  flex-direction: row;
  vertical-align: middle;

  .z-button-switch,
  .z-button-toggle {
    flex: 1 1 auto;
    display: inline-block;
    font-family: $font-family;
    font-size: $font-size-xs;
    font-weight: $font-weight-semibold;
    color: map-get($button-group, 'default', 'font');
    background-color: map-get($button-group, 'default', 'background');
    opacity: 1;
    vertical-align: middle;
    text-align: center;
    text-decoration: none;
    user-select: none;
    white-space: nowrap;
    overflow:visible;
    cursor: pointer;
    @include border(0.0625rem, solid, map-get($button-group, 'default', 'border'), all);
    @include borderRadius(0.25rem); // 4px
    @if map-get($button-group, 'default', 'shadow') != null {
      box-shadow: map-get($button-group, 'default', 'shadow');
    }
    padding: 0.25rem 0.6875rem; // 4px 11px

    // 아이콘이 존재한다면
    .z-icon {
      display: inline-block;
      background: map-get($button-group, 'default', 'font');
      vertical-align: middle;
      pointer-events: none;
    }

    &:focus {
      outline: 0;
      color: map-get($button-group, 'focus', 'font');
      background-color: map-get($button-group, 'focus', 'background');
      border-color: map-get($button-group, 'focus', 'border');
      @if map-get($button-group, 'focus', 'shadow') != null {
        box-shadow: map-get($button-group, 'focus', 'shadow');
      }
      .z-icon {
        background: map-get($button-group, 'focus', 'font');
      }
    }

    &:hover {
      outline: 0;
      color: map-get($button-group, 'hover', 'font');
      background-color: map-get($button-group, 'hover', 'background');
      border-color: map-get($button-group, 'hover', 'border');
      @if map-get($button-group, 'hover', 'shadow') != null {
        box-shadow: map-get($button-group, 'hover', 'shadow');
      }
      .z-icon {
        background: map-get($button-group, 'hover', 'font');
      }
    }

    &:enabled:active,
    &:enabled.active {
      color: map-get($button-group, 'active', 'font');
      background-color: map-get($button-group, 'active', 'background');
      border-color: map-get($button-group, 'active', 'border');
      z-index: 25;
      @if map-get($button-group, 'active', 'shadow') != null {
        box-shadow: map-get($button-group, 'active', 'shadow');
      }
      .z-icon {
        background: map-get($button-group, 'active', 'font');
      }
    }
    // 선택된 경우
    &.selected:not(:disabled),
    &.selected:not(.disabled) {
      color: map-get($button-group, 'selected', 'font');
      background-color: map-get($button-group, 'selected', 'background');
      border-color: map-get($button-group, 'selected', 'border');
      z-index: 25;
      @if map-get($button-group, 'selected', 'shadow') != null {
        box-shadow: map-get($button-group, 'selected', 'shadow');
      }
      .z-icon {
        background: map-get($button-group, 'selected', 'font');
      }
    }

    &:disabled,
    &.disabled {
      color: map-get($button-group, 'disabled', 'font');
      background-color: map-get($button-group, 'disabled', 'background');
      border-color: map-get($button-group, 'disabled', 'border');
      cursor: default;
      @if map-get($button-group, 'disabled', 'shadow') != null {
        box-shadow: map-get($button-group, 'disabled', 'shadow');
      }
      .z-icon {
        background: map-get($button-group, 'disabled', 'font');
      }
    }
  }

  // 양 끝 테두리 둥글게
  .z-button-switch:not(:first-child),
  .z-button-toggle:not(:first-child) {
    margin-left: -0.0625rem;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .z-button-switch:not(:last-of-type),
  .z-button-toggle:not(:last-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  // vertical button toggle group
  &.vertical {
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;

    .z-button-switch,
    .z-button-toggle {
      flex: 0 1 auto;
      @include borderRadius(0.25rem); // 4px
      width: 100%;
    }
    // Prevent double borders when buttons are next to each other
    .z-button-switch:not(:first-child),
    .z-button-toggle:not(:first-child) {
      margin-left: 0;
      margin-top: -0.0625rem;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    .z-button-switch:not(:last-of-type),
    .z-button-toggle:not(:last-of-type) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}
