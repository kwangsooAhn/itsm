/* _elements.scss 
 *
 * 파일 경로 : template/_elements.scss
 * @description HTML element 디자인
 * @author wdj
 * @version 1.0
 */

// 기본 글꼴 설정.
// 모바일 기기 회전시에 사용자가 확대하지 않아도 글씨 크기가 재조정되는 것을 예방.
body {
  font-family: $font-family;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

// headings
h1, h2, h3, h4, h5, h6 {
  font-family: inherit;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-font-color;
}

h1 { 
  font-size: $h1-font-size;
  font-weight: $font-weight-bold;
}
h2 { 
  font-size: $h2-font-size;
}
h3 { 
  font-size: $h3-font-size;
}
h4 { 
  font-size: $h4-font-size;
}
h5 { 
  font-size: $h5-font-size;
}
h6 { 
  font-family: 'Malgun Gothic'; // h6 만 기본 값이 맑은 고딕.
  font-size: $h6-font-size;
}
// a
a { cursor: pointer; }
a:link,
a:visited,
a:hover,
a:active {
  text-decoration: none;
}
// 공통: readonly거나 disabled 일 경우 element에 focus가 처리되지 않는다.
// input
input {
  height: 2.5rem; // 40px
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  line-height: $element-line-height;
  color: $element-font-color;
  background-color: $element-bg-color;
  @include border($element-border-width, solid, $element-border-color, all);
  @include borderRadius(0.0625rem); // 1px
  padding: 0 $element-indent 0 $element-indent; // 들여쓰기 0 10px
  vertical-align: middle;

  &::placeholder {
    color: $element-placeholder-font-color;
  }

  &:not(:disabled),
  &:not(:read-only) {
    &:focus {
      outline: 0;
      border: $element-focus-border;
    }
  
    &:hover {
      outline: 0;
      border: $element-hover-border;
      @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
    }
  }

  &:disabled {
    color: $element-disabled-font-color;
    background-color: $element-disabled-bg-color;
    border-color: $element-disabled-border-color;
    pointer-events: none;
    cursor: default;
  }

  &:read-only {
    background-color: $element-readonly-bg-color;
    border-color: $element-readonly-border-color;
    pointer-events: none;
    cursor: default;
  }

  &.icon {
    padding-right: 2.5rem; // 아이콘 크기만큼 들여 쓰기 40px
  }

  &.error {
    color: $element-error-font-color;
    border: $element-error-border;
  }

  &[type=range] {
    -webkit-appearance: none;
    appearance: none;
    height: 0.0625rem; // 1px
    background-color: $element-border-color;
    outline: 0;

    &::-webkit-slider-thumb { // 동그라미
      -webkit-appearance: none;
      appearance: none;
      @include thumb(1.125rem, 1.125rem, $element-border, 50%, $element-bg-color); // 18px 18px
    }

    &::-moz-range-thumb { // 동그라미
      @include thumb(1.125rem, 1.125rem, $element-border, 50%, $element-bg-color); // 18px 18px
    }
  }
}
// textarea
textarea {
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  line-height: $element-line-height;
  color: $element-font-color;
  background-color: $element-bg-color;
  @include border($element-border-width, solid, $element-border-color, all);
  @include borderRadius(0.0625rem); // 1px
  padding: 0.5rem $element-indent 0.5rem $element-indent; // 들여쓰기 8px 10px 8px 10px
  resize: vertical;

  &::placeholder {
    color: $element-placeholder-font-color;
  }

  &:not(:disabled),
  &:not(:read-only) {
    &:focus {
      outline: 0;
      border: $element-focus-border;
    }

    &:hover {
      outline: 0;
      border: $element-hover-border;
      @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
    }
  }

  &:disabled {
    color: $element-disabled-font-color;
    background-color: $element-disabled-bg-color;
    pointer-events: none;
    cursor: default;
  }

  &:read-only {
    background-color: $element-readonly-bg-color;
    border-color: $element-readonly-border-color;
    pointer-events: none;
    cursor: default;
  }

  &.error {
    color: $element-error-font-color;
    border: $element-error-border;
  }
}
// table
table {
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0; // 테이블 요소 사이의 간격을 제거
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  color: $element-font-color;
  background-color: transparent;
  @include border($element-border-width, solid, transparent, all);

  tr {
    height: 2.5rem; // 40px

    th {
      font-size: $table-th-font-size;
      font-weight: $table-th-font-weight;
    }

    td, th {
      @include border($element-border-width, solid, transparent, all);
      @include ellipsis(table-cell);
    }
  }
}
// select
select {
  height: 2.5rem; // 40px
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  line-height: $element-line-height;
  color: $element-font-color;
  background-color: $element-bg-color;
  @include border($element-border-width, solid, $element-border-color, all);
  @include borderRadius(0.0625rem); // 1px
  padding: 0 $element-indent 0 $element-indent; // 들여쓰기 0 10px 0 10px
  vertical-align: middle;

  &:not(:disabled),
  &:not(:read-only) {
    &:focus {
      outline: 0;
      border: $element-focus-border;
    }

    &:hover {
      outline: 0;
      border: $element-hover-border;
      @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
    }
  }

  &:disabled {
    color: $element-disabled-font-color;
    background-color: $element-disabled-bg-color;
    pointer-events: none;
    cursor: default;
  }
}

// designed select
.select {
  @include relative();
  display: inline-block;
  font-size: $element-font-size;
  height: 2.5rem; // 40px
  width: 100%;
  padding: 0 2px;

  .select-hidden {
    visibility: hidden;
    padding-right: 0.625rem; // 10px
  }

  .designed-select {
    @include absolute(0, 0, 0, 0);
    padding: 0.5rem 0.625rem; // 8px 10px
    background-color: $element-bg-color;
    color: $element-font-color;
    @include border($element-border-width, solid, $element-border-color, all);
    @include borderRadius(0.0625rem); // 1px
    font-family: inherit;
    font-size: $element-font-size;
    font-weight: $element-font-weight;
    line-height: $element-line-height;
    display: flex;
    align-items: flex-start;
    overflow: hidden;
    cursor: pointer;

    &:after {
      content:'';
      @include absolute($right: 0.625rem); // 10px
      width: 0;
      height: 0;
      border: 0.625rem solid transparent; // 10px
      @include backgroundImage($icon-folder-path + 'icon_arrow_bottom.svg', auto, no-repeat, center, left, null);
    }
    &:not(:disabled),
    &:not(.readonly) {
      &:hover {
        outline: 0;
        border: $element-hover-border;
        @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
      }
      &.active {
        outline: 0;
        border: $element-focus-border;

        &:after {
          top: 0.5625rem; // 9px
          @include backgroundImage($icon-folder-path + 'icon_arrow_up.svg', auto, no-repeat, center, left, null);
        }

        + .designed-options {
          display: block;
        }
      }
    }

    &.disabled-select {
      color: $element-disabled-font-color;
      background-color: $element-disabled-bg-color;
      pointer-events: none;
      cursor: default;
    }
  }

  .designed-options {
    display: none;
    @include absolute(calc(100% + 0.3125rem), 0, null, 0);  // 5px
    z-index: $z-index-between-alert-modal;
    margin: 0;
    padding: 0;
    list-style: none;
    max-height: 25rem; // 400px
    color: $element-font-color;
    background-color: $element-bg-color;
    outline: 0;
    @include border($element-border-width, solid, $element-border-color, all);
    overflow: auto;
    @include borderRadius(0.0625rem); // 1px
    @include boxShadow(0, 0, 0.3125rem, 0, map-get($grays, 'line'));
    li {
      margin: 0;
      padding: 0.75rem 0; // 12px
      text-indent: 0.625rem; // 10px
      @include ellipsis(list-item);
      &:hover {
        background: $select-bg-color;
      }
      &[rel='hide'] {
        display: none;
      }
    }
  }

  &.readonly {
    .designed-select {
      background-color: $element-readonly-bg-color;
      pointer-events: none;
      cursor: default;
    }
  }
}

option {
  &:hover {
    background-color: $element-hover-bg-color;
  }
  &:visited {
    color: $element-selected-font-color;
    background-color: $element-bg-color;
  }
  &:active,
  &:focus {
    color: $element-selected-font-color;
  }
}
// span
span {
  font-family: inherit;
  margin: auto 0;
}
// label
label {
  font-family: inherit;
  color: $label-font-color;
  font-size: $label-font-size;
  font-weight: $label-font-weight;
}
// radio button
.radio {
  @include relative();
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  color: $element-font-color;
  outline: none;
  
  > span:first-of-type {
    padding-right: $element-indent;
  }

  input[type=radio] {
    display: none;
    // ⓞ 로 사용될 span
    + span {
      @include relative();

      &::before { // 테두리로 사용되는 큰 원
        content: '';
        @include relative($top: -0.0625rem); // -1px
        display: inline-block;
        width: 1.125rem; // 18px
        height: 1.125rem; // 18px
        background-color: $element-bg-color;
        @include border($element-border-width, solid, $element-border-color, all);
        @include borderRadius(50%);
        vertical-align: middle;
        text-align: center;
      }

      &::after { // 선택시 작은 원
        content: '';
        @include absolute($top: 0, $left: 0);
        width: 0.625rem; // 10px
        height: 0.625rem; // 10px
        background-color: transparent;
        @include borderRadius(50%);
      }
    }

    &:not(:disabled) {
      + span { cursor: pointer; }
      ~ .label { cursor: pointer; }

      &:checked {
        + span {
          &::before {
            border-color: $element-border-color;
          }
          &::after {
            background-color: $element-checked-bg-color;
            @include transform(translate(4px, 9px) scale(1)); // 4px, 9px
          }
        }
      }

      &:hover {
        + span {
          &::before {
            border-color: $element-hover-border-color;
            @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
          }
        }
      }
    }

    &:disabled {
      + span {
        &::before {
          border-color: $element-disabled-border-color;
          background-color: $element-disabled-bg-color;
        }
      }
      ~ .label {
        color: $element-disabled-font-color;
      }
      &:checked {
        + span {
          &::after {
            background-color: $element-disabled-font-color;
            @include transform(translate(4px, 9px) scale(1)); // 4px, 9px
          }
        }
      }
    }
  }

  &:focus {
    input[type=radio]:not(:disabled) {
      + span {
        &:before {
          border-color: $element-focus-border-color;
        }
      }
    }
  }
}
// checkbox
.checkbox {
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  line-height: $element-line-height;
  color: $element-font-color;
  outline: none;

  > span:first-of-type {
    padding-right: $element-indent;
  }

  input[type=checkbox] {
    display: none;
    // 체크 박스 span
    + span {
      @include relative();

      &::before {
        content: '';
        display: inline-block;
        width: 1.125rem; // 18px
        height: 1.125rem; // 18px
        background-color: $element-bg-color;
        @include border($element-border-width, solid, $element-border-color, all);
        @include borderRadius(0.0625rem); // 1px
        vertical-align: middle;
      }
    }

    &:not(:disabled) {
      + span { cursor: pointer; }
      ~ .label { cursor: pointer; }
      &:checked {
        + span {
          // 체크 기호
          &::after {
            content: '';
            @include absolute($top: 0.375rem, $left: 0); // 6px
            width: 0.75rem; // 12px
            height: 0.375rem; // 6px
            border: 0.125rem solid $element-checked-bg-color; // 2px
            border-right: none;
            border-top: none;
            @include transform(translate(0.1875rem, 0.25rem) rotate(-45deg)); // 3px, 4px
          }
        }
      }

      &:hover {
        + span {
          &::before {
            border-color: $element-hover-border-color;
            @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
          }
        }
      }
    }

    &:disabled {
      + span {
        &::before {
          background-color: $element-disabled-bg-color;
        }
        &::after {
          border-color: $element-disabled-font-color;
        }
      }
      ~ .label {
        color: $element-disabled-font-color;
      }
    }
  }

  &:focus {
    input[type=checkbox]:not(:disabled) {
      + span {
        &:before {
          border-color: $element-focus-border-color;
        }
      }
    }
  }
}
// switch
.switch {
  @include relative();
  height: 2.188rem; // 35px
  font-family: inherit;
  font-size: $element-font-size;
  font-weight: $element-font-weight;
  line-height: $element-line-height;
  color: $element-font-color;
  outline: none;

  .label {
    display: inline-block;
    height: 2.188rem; // 35px
    line-height: 2.0;
    margin-left: 5.625rem; // 90px
    cursor: pointer;
  }

  input[type=checkbox] {
    display: none;
    // 스위치 버튼
    + span {
      @include absolute(0, 0, 0, 0);
      width: 5rem; // 80px
      background-color: map-get($grays, 'default');
      @include borderRadius(2.5rem); // 40px
      cursor: pointer;
      @include transition(.4s);
      // 동그라미
      &::before {
        content: '';
        @include absolute($left: 0.25rem, $bottom: 0.3125rem); // 4px 5px
        width: 1.563rem; // 25px
        height: 1.563rem; // 25px
        background-color: $white;
        @include borderRadius(50%);
      }
    }

    &:checked {
      + span {
        background-color: $element-checked-bg-color;

        &::before {
          @include translate(2.875rem, 0); // 46px
        }
      }
    }
    // TODO: 디자인 필요
    //&:disabled {
    //  + span {
    //    background-color: $element-disabled-bg-color;
    //  }
    //}

    &:hover {
      + span {
        &::before {
          border-color: $element-hover-border-color;
          @include boxShadow(0, 0, 0.3125rem, 0, hexToRGBA($blue, 0.2)); // 5px
        }
      }
    }
  }

  &:focus {
    input[type=checkbox] {
      + span {
        &:before {
          border-color: $element-focus-border-color;
        }
      }
    }
  }
}
// input box + button
.input-button {
  input[type='text'] { 
    margin: 0; 
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    &:focus,
    &:hover {
      z-index: $z-index-event;
    }
  }
  button { 
    margin-left: -0.0625rem;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

    &:focus,
    &:hover,
    &:active {
      z-index: $z-index-event;
    }
  }
}