@import "../template/buttons";

// header button
.#{$common-prefix}header-button {
  padding: 0.5625rem 0.625rem; // 9px 10px
  &.#{$common-prefix}button-icon {
    .#{$common-prefix}icon {
      &.i-save {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_save.svg', 1.5rem, 1.5rem, no-repeat, center); // 24px 24px
      }
      &.i-save-as {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_save_as.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
      &.i-undo {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_undo.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
      &.i-redo {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_redo.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
      &.i-simulation {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_simulation.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
      &.i-image-download {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_image_download.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
      &.i-dropdown {
        @include maskImage('#{$icon-folder-path}process/topmenu/icon_dropdown.svg', 1.5rem, 1.5rem, no-repeat, center);// 24px 24px
      }
    }
  }
}

// element palette > element icon
.#{$common-prefix}element-icon {
  display: inline-block;
  font-family: $element-icon-font-family;
  font-size: $element-icon-font-size;
  font-weight: $element-icon-font-weight;
  width: $element-icon-width;
  height: $element-icon-height;
  padding: 0;
  margin: 0.313rem 0.313rem 0 0.313rem; // 5px
  color: map-get($element-icon, 'default', 'font');
  background-color: map-get($element-icon, 'default', 'background');
  @include border($element-icon-border-width, solid, map-get($element-icon, 'default', 'border'), all); // 1px
  @include borderRadius($element-icon-border-radius);
  @if map-get($element-icon, 'default', 'shadow') != null {
    box-shadow: map-get($element-icon, 'default', 'shadow');
  }
  opacity: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  user-select: none;
  white-space: nowrap;
  vertical-align: middle;
  overflow:visible;
  cursor: pointer;

  &:disabled,
  &.disabled {
    cursor: default;
  }

  .#{$common-prefix}element-icon-text {
    display: block;
    color: map-get($element-icon, 'default', 'font');
  }

  .#{$common-prefix}icon {
    display: inline-block;
    background: map-get($element-icon, 'default', 'icon');;
    // 이벤트
    &.i-event {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_event.svg', 26px, 26px, no-repeat, center); // 26px 26px
    }
    // 테스트
    &.i-task {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_task.svg', 24px, 24px, no-repeat, center); // 24px 24px
    }
    // 서브프로세스
    &.i-subprocess {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_subprocess.svg', 24px, 24px, no-repeat, center); // 24px, 24px
    }
    // 게이트웨이
    &.i-gateway {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_gateway.svg', 30px, 30px, no-repeat, center); // 30px 30px
    }
    // 그룹
    &.i-group {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_group.svg', 24px, 24px, no-repeat, center); // 24px 24px
    }
    // 주석
    &.i-annotation {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_annotation.svg', 24px, 24px, no-repeat, center); // 24px 24px
    }
    // 연결선
    &.i-connector {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_connector.svg', 24px, 24px, no-repeat, center); // 24px 24px
    }
    // 배경이동
    &.i-background {
      @include maskImage('#{$icon-folder-path}process/element-palette/icon_background.svg', 24px, 24px, no-repeat, center); // 24px 24px
    }
  }

  &:focus {
    outline: 0;
    background-color: map-get($element-icon, 'focus', 'background');
    border-color: map-get($element-icon, 'focus', 'border');
    @if map-get($element-icon, 'focus', 'shadow') != null {
      box-shadow: map-get($element-icon, 'focus', 'shadow');
    }
    .#{$common-prefix}element-icon-text {
      color: map-get($element-icon, 'focus', 'font');
    }

    .#{$common-prefix}icon {
      background: map-get($element-icon, 'focus', 'icon');
    }
  }

  &:hover {
    outline: 0;
    background-color: map-get($element-icon, 'hover', 'background');
    border-color: map-get($element-icon, 'hover', 'border');
    @if map-get($element-icon, 'hover', 'shadow') != null {
      box-shadow: map-get($element-icon, 'hover', 'shadow');
    }
    .#{$common-prefix}element-icon-text {
      color: map-get($element-icon, 'hover', 'font');
    }
    .#{$common-prefix}icon {
      background: map-get($element-icon, 'hover', 'icon');
    }
  }

  &.active {
    background-color: map-get($element-icon, 'drag', 'background');
    border-color: map-get($element-icon, 'drag', 'border');
    z-index: $z-index-event;
    @if map-get($element-icon, 'drag', 'shadow') != null {
      box-shadow: map-get($element-icon, 'drag', 'shadow');
    }
    .#{$common-prefix}element-icon-text {
      color: map-get($element-icon, 'drag', 'font');
      font-weight: $font-weight-bold;
    }
    .#{$common-prefix}icon {
      background: map-get($element-icon, 'drag', 'icon');
    }
  }

  &.placeholder {
    background-color: map-get($element-icon, 'placeholder', 'background');
    border-color: map-get($element-icon, 'placeholder', 'border');
    @if map-get($element-icon, 'placeholder', 'shadow') != null {
      box-shadow: map-get($element-icon, 'placeholder', 'shadow');
    }
    .#{$common-prefix}element-icon-text {
      color: map-get($element-icon, 'placeholder', 'font');
    }
    .#{$common-prefix}icon {
      background: map-get($element-icon, 'placeholder', 'icon');
    }
  }

  // 연결선, 배경이동
  &.connector,
  &.move-icon {
    color: map-get($element-icon-toggle, 'default', 'font');
    background-color: map-get($element-icon-toggle, 'default', 'background');
    @include border($element-icon-border-width, solid, map-get($element-icon-toggle, 'default', 'border'), all);
    @if map-get($element-icon-toggle, 'default', 'shadow') != null {
      box-shadow: map-get($element-icon-toggle, 'default', 'shadow');
    }
    // 아이콘이 존재한다면
    .#{$common-prefix}icon {
      background: map-get($element-icon-toggle, 'default', 'font');
    }
    .#{$common-prefix}element-icon-text {
      color: map-get($element-icon-toggle, 'default', 'font');
    }

    &:focus {
      outline: 0;
      color: map-get($element-icon-toggle, 'focus', 'font');
      background-color: map-get($element-icon-toggle, 'focus', 'background');
      border-color: map-get($element-icon-toggle, 'focus', 'border');
      @if map-get($element-icon-toggle, 'focus', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'focus', 'shadow');
      }
      .#{$common-prefix}icon {
        background: map-get($element-icon-toggle, 'focus', 'font');
      }
      .#{$common-prefix}element-icon-text {
        color: map-get($element-icon-toggle, 'focus', 'font');
      }
    }

    &:hover {
      outline: 0;
      color: map-get($element-icon-toggle, 'hover', 'font');
      background-color: map-get($element-icon-toggle, 'hover', 'background');
      border-color: map-get($element-icon-toggle, 'hover', 'border');
      @if map-get($element-icon-toggle, 'hover', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'hover', 'shadow');
      }
      .#{$common-prefix}icon {
        background: map-get($element-icon-toggle, 'hover', 'font');
      }
      .#{$common-prefix}element-icon-text {
        color: map-get($element-icon-toggle, 'hover', 'font');
      }
    }

    &:enabled:active,
    &:enabled.active {
      color: map-get($element-icon-toggle, 'active', 'font');
      background-color: map-get($element-icon-toggle, 'active', 'background');
      border-color: map-get($element-icon-toggle, 'active', 'border');
      z-index: $z-index-event;
      @if map-get($element-icon-toggle, 'active', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'active', 'shadow');
      }
      .#{$common-prefix}icon {
        background: map-get($element-icon-toggle, 'active', 'font');
      }
      .#{$common-prefix}element-icon-text {
        color: map-get($element-icon-toggle, 'active', 'font');
      }
    }
    // 선택된 경우
    &.selected:not(:disabled),
    &.selected:not(.disabled) {
      color: map-get($element-icon-toggle, 'selected', 'font');
      background-color: map-get($element-icon-toggle, 'selected', 'background');
      border-color: map-get($element-icon-toggle, 'selected', 'border');
      z-index: $z-index-event;
      @if map-get($element-icon-toggle, 'selected', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'selected', 'shadow');
      }
      .#{$common-prefix}icon {
        background: map-get($element-icon-toggle, 'selected', 'font');
      }
      .#{$common-prefix}element-icon-text {
        color: map-get($element-icon-toggle, 'selected', 'font');
      }
    }

    &:disabled,
    &.disabled {
      color: map-get($element-icon-toggle, 'disabled', 'font');
      background-color: map-get($element-icon-toggle, 'disabled', 'background');
      border-color: map-get($element-icon-toggle, 'disabled', 'border');
      cursor: default;
      @if map-get($element-icon-toggle, 'disabled', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'disabled', 'shadow');
      }
      .#{$common-prefix}icon {
        background: map-get($element-icon-toggle, 'disabled', 'font');
      }
      .#{$common-prefix}element-icon-text {
        color: map-get($element-icon-toggle, 'disabled', 'font');
      }
    }
  }



  // Connector 
  &.connector {
    @include absolute($bottom: 5rem); // 80px
  }
  // Background
  &.move-icon {
    @include absolute($bottom: 0.313rem); //  5px
  }
}

.#{$common-prefix}button-icon {
  &.#{$common-prefix}button-minimap {
    @include absolute($right: 0.625rem, $bottom: 0.625rem); // 10px 10px
    .#{$common-prefix}icon {
      &.i-minimap {
        @include maskImage('#{$icon-folder-path}process/editor/icon_map.svg', 1.5rem, 1.5rem, no-repeat, center); // 24px 24px
      }
    }
  }
  &.#{$common-prefix}button-simulation-report {
    @include absolute($right: 0.625rem, $bottom: 3.438rem); // 10px 55px
    .#{$common-prefix}icon {
      &.i-simulation-report {
        @include maskImage('#{$icon-folder-path}process/editor/icon_simulation_report.svg', 1.5rem, 1.5rem, no-repeat, center); // 24px 24px
      }
    }
  }
  &.#{$common-prefix}button-candidate-add {
    margin-left: 0.3125rem; // 5px
  }
}
