@import "../template/buttons";

// header button
.z-header-button {
  &.z-button-icon {
    .z-icon {
      pointer-events: none;

      &.i-arrow-right {
        @include rotate(90);
      }
    }
  }
}

// header dropdown button
.z-header-button-dropdown {
  width: 1.25rem; // 20px
  padding: 0.5625rem 0.1875rem; // 9px 3px

  .z-icon {
    margin-left: -0.1875rem; // -3px
    pointer-events: none;
  }

  + .z-dropdown-content {
    min-width: 9.625rem; // 154px
    visibility: hidden;
    @include absolute($right: 0);
    padding: 0 0.25rem 0.25rem 0.25rem; // 0 4px 4px 4px
    margin: 0.6875rem 0 0 0; // 11px
    z-index: $z-index-between-tooltip-gnb;
    background-color: $white;
    @include border(0.0625rem, solid, $gray300, all); // 1px
    @include boxShadow(0, 2px, 12px, 0, $gray300); // 0, 2px, 12px, 0

    .z-dropdown-item {
      padding: 0.25rem 0 0 0; // 4px 0 0 0

      .z-button-dropdown {
        width: 100%;
        font-weight: $font-weight-medium;
        color: map-get($layout-header-dropdown, 'default', 'font');
        background-color: map-get($layout-header-dropdown, 'default', 'background');
        border-color: map-get($layout-header-dropdown, 'default', 'border');
        @if map-get($layout-header-dropdown, 'default', 'shadow') != null {
          box-shadow: map-get($layout-header-dropdown, 'default', 'shadow');
        }
        &:focus {
          outline: 0;
          color: map-get($layout-header-dropdown, 'focus', 'font');
          background-color: map-get($layout-header-dropdown, 'focus', 'background');
          border-color: map-get($layout-header-dropdown, 'focus', 'border');
          @if map-get($layout-header-dropdown, 'focus', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'focus', 'shadow');
          }
        }

        &:hover {
          outline: 0;
          color: map-get($layout-header-dropdown, 'hover', 'font');
          background-color: map-get($layout-header-dropdown, 'hover', 'background');
          border-color: map-get($layout-header-dropdown, 'hover', 'border');
          @if map-get($layout-header-dropdown, 'hover', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'hover', 'shadow');
          }
        }

        &:enabled:active,
        &:enabled.active {
          color: map-get($layout-header-dropdown, 'active', 'font');
          background-color: map-get($layout-header-dropdown, 'active', 'background');
          border-color: map-get($layout-header-dropdown, 'active', 'border');
          z-index: $z-index-event;
          @if map-get($layout-header-dropdown, 'active', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'active', 'shadow');
          }
        }
      }
    }
  }

  &.active {
    .z-icon {
      &.i-arrow-right {
        @include rotate(-90);
      }
    }
    + .z-dropdown-content {
      visibility: visible;
      display: block;
    }
  }
}

// element palette > element icon
.z-element-icon {
  display: inline-block;
  font-family: $font-family;
  font-size: $font-size-xs;
  font-weight: $font-weight-medium;
  width: 5.625rem; // 90px
  height: 4.375rem; // 70px
  padding: 0;
  margin: 0.313rem 0.313rem 0 0.313rem; // 5px
  color: map-get($element-icon, 'default', 'font');
  background-color: map-get($element-icon, 'default', 'background');
  @include border(0.0625rem, solid, map-get($element-icon, 'default', 'border'), all); // 1px
  @include borderRadius(0.125rem); // 2px
  @if map-get($element-icon, 'default', 'shadow') != null {
    box-shadow: map-get($element-icon, 'default', 'shadow');
  }
  opacity: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  user-select: none;
  white-space: nowrap;
  vertical-align: middle;
  overflow:visible;
  cursor: pointer;

  &:disabled,
  &.disabled {
    cursor: default;
  }

  .z-element-icon-text {
    display: block;
    font-weight: $font-weight-medium;
    color: map-get($element-icon, 'default', 'font');
  }

  .z-icon {
    display: inline-block;
    background: map-get($element-icon, 'default', 'icon');
  }

  &:focus {
    outline: 0;
    background-color: map-get($element-icon, 'focus', 'background');
    border-color: map-get($element-icon, 'focus', 'border');
    @if map-get($element-icon, 'focus', 'shadow') != null {
      box-shadow: map-get($element-icon, 'focus', 'shadow');
    }
    .z-element-icon-text {
      color: map-get($element-icon, 'focus', 'font');
    }

    .z-icon {
      background: map-get($element-icon, 'focus', 'icon');
    }
  }

  &:hover {
    outline: 0;
    background-color: map-get($element-icon, 'hover', 'background');
    border-color: map-get($element-icon, 'hover', 'border');
    @if map-get($element-icon, 'hover', 'shadow') != null {
      box-shadow: map-get($element-icon, 'hover', 'shadow');
    }
    .z-element-icon-text {
      color: map-get($element-icon, 'hover', 'font');
    }
    .z-icon {
      background: map-get($element-icon, 'hover', 'icon');
    }
  }
  // html5 drag 는 드래그 시작시 active 상태의 디자인을 복사하기 때문에 drag 디자인을 입힘
  &.active {
    background-color: map-get($element-icon, 'drag', 'background');
    border-color: map-get($element-icon, 'drag', 'border');
    z-index: $z-index-event;
    @if map-get($element-icon, 'drag', 'shadow') != null {
      box-shadow: map-get($element-icon, 'drag', 'shadow');
    }
    .z-element-icon-text {
      color: map-get($element-icon, 'drag', 'font');
      font-weight: $font-weight-bold;
    }
    .z-icon {
      background: map-get($element-icon, 'drag', 'icon');
    }
  }

  &.placeholder {
    background-color: map-get($element-icon, 'placeholder', 'background');
    border-color: map-get($element-icon, 'placeholder', 'border');
    @if map-get($element-icon, 'placeholder', 'shadow') != null {
      box-shadow: map-get($element-icon, 'placeholder', 'shadow');
    }
    .z-element-icon-text {
      color: map-get($element-icon, 'placeholder', 'font');
    }
    .z-icon {
      background: map-get($element-icon, 'placeholder', 'icon');
    }
  }

  // 연결선, 배경이동
  &.connector,
  &.move-icon {
    color: map-get($element-icon-toggle, 'default', 'font');
    background-color: map-get($element-icon-toggle, 'default', 'background');
    @include border(0.0625rem, solid, map-get($element-icon-toggle, 'default', 'border'), all);
    @if map-get($element-icon-toggle, 'default', 'shadow') != null {
      box-shadow: map-get($element-icon-toggle, 'default', 'shadow');
    }
    // 아이콘이 존재한다면
    .z-icon {
      background: map-get($element-icon-toggle, 'default', 'font');
    }
    .z-element-icon-text {
      color: map-get($element-icon-toggle, 'default', 'font');
    }

    &:focus {
      outline: 0;
      color: map-get($element-icon-toggle, 'focus', 'font');
      background-color: map-get($element-icon-toggle, 'focus', 'background');
      border-color: map-get($element-icon-toggle, 'focus', 'border');
      @if map-get($element-icon-toggle, 'focus', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'focus', 'shadow');
      }
      .z-icon {
        background: map-get($element-icon-toggle, 'focus', 'font');
      }
      .z-element-icon-text {
        color: map-get($element-icon-toggle, 'focus', 'font');
      }
    }

    &:hover {
      outline: 0;
      color: map-get($element-icon-toggle, 'hover', 'font');
      background-color: map-get($element-icon-toggle, 'hover', 'background');
      border-color: map-get($element-icon-toggle, 'hover', 'border');
      @if map-get($element-icon-toggle, 'hover', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'hover', 'shadow');
      }
      .z-icon {
        background: map-get($element-icon-toggle, 'hover', 'font');
      }
      .z-element-icon-text {
        color: map-get($element-icon-toggle, 'hover', 'font');
      }
    }

    &:enabled:active,
    &:enabled.active {
      color: map-get($element-icon-toggle, 'active', 'font');
      background-color: map-get($element-icon-toggle, 'active', 'background');
      border-color: map-get($element-icon-toggle, 'active', 'border');
      z-index: $z-index-event;
      @if map-get($element-icon-toggle, 'active', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'active', 'shadow');
      }
      .z-icon {
        background: map-get($element-icon-toggle, 'active', 'font');
      }
      .z-element-icon-text {
        color: map-get($element-icon-toggle, 'active', 'font');
      }
    }
    // 선택된 경우
    &.selected:not(:disabled),
    &.selected:not(.disabled) {
      color: map-get($element-icon-toggle, 'selected', 'font');
      background-color: map-get($element-icon-toggle, 'selected', 'background');
      border-color: map-get($element-icon-toggle, 'selected', 'border');
      z-index: $z-index-event;
      @if map-get($element-icon-toggle, 'selected', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'selected', 'shadow');
      }
      .z-icon {
        background: map-get($element-icon-toggle, 'selected', 'font');
      }
      .z-element-icon-text {
        color: map-get($element-icon-toggle, 'selected', 'font');
      }
    }

    &:disabled,
    &.disabled {
      color: map-get($element-icon-toggle, 'disabled', 'font');
      background-color: map-get($element-icon-toggle, 'disabled', 'background');
      border-color: map-get($element-icon-toggle, 'disabled', 'border');
      cursor: default;
      @if map-get($element-icon-toggle, 'disabled', 'shadow') != null {
        box-shadow: map-get($element-icon-toggle, 'disabled', 'shadow');
      }
      .z-icon {
        background: map-get($element-icon-toggle, 'disabled', 'font');
      }
      .z-element-icon-text {
        color: map-get($element-icon-toggle, 'disabled', 'font');
      }
    }
  }

  // Connector 
  &.connector {
    @include absolute($bottom: 5rem); // 80px
  }
  // Background
  &.move-icon {
    @include absolute($bottom: 0.313rem); //  5px
  }
}

.z-button-icon {
  &.z-button-minimap {
    @include absolute($right: 0.625rem, $bottom: 0.625rem); // 10px 10px
  }
  &.z-button-simulation-report {
    @include absolute($right: 0.625rem, $bottom: 3.438rem); // 10px 55px
  }
  &.z-button-candidate-add {
    margin-left: 0.3125rem; // 5px
    .z-icon {
      &.i-plus { background: $gray500; }
    }
  }
  &.z-button-attach-file {
    .z-icon {
      &.i-folder { background: $gray500; }
    }
  }
}
