@import "../template/buttons";

// header button
.z-header-button {
  &.z-button-icon {
    .z-icon {
      pointer-events: none;

      &.i-arrow-right {
        @include rotate(90);
      }
    }
  }
}

// header dropdown button
.z-header-button-dropdown {
  width: 1.25rem; // 20px
  padding: 0.5625rem 0.1875rem; // 9px 3px

  .z-icon {
    margin-left: -0.1875rem; // -3px
    pointer-events: none;
  }

  + .z-dropdown-content {
    min-width: 9.625rem; // 154px
    visibility: hidden;
    @include absolute($right: 0);
    padding: 0 0.25rem 0.25rem 0.25rem; // 0 4px 4px 4px
    margin: 0.6875rem 0 0 0; // 11px
    z-index: 250;
    background-color: $white;
    @include border(0.0625rem, solid, $gray300, all); // 1px
    @include boxShadow(0, 2px, 12px, 0, $gray300); // 0, 2px, 12px, 0

    .z-dropdown-item {
      padding: 0.25rem 0 0 0; // 4px 0 0 0

      .z-button-dropdown {
        width: 100%;
        font-weight: $font-weight-medium;
        color: map-get($layout-header-dropdown, 'default', 'font');
        background-color: map-get($layout-header-dropdown, 'default', 'background');
        border-color: map-get($layout-header-dropdown, 'default', 'border');
        @if map-get($layout-header-dropdown, 'default', 'shadow') != null {
          box-shadow: map-get($layout-header-dropdown, 'default', 'shadow');
        }
        &:focus {
          outline: 0;
          color: map-get($layout-header-dropdown, 'focus', 'font');
          background-color: map-get($layout-header-dropdown, 'focus', 'background');
          border-color: map-get($layout-header-dropdown, 'focus', 'border');
          @if map-get($layout-header-dropdown, 'focus', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'focus', 'shadow');
          }
        }

        &:hover {
          outline: 0;
          color: map-get($layout-header-dropdown, 'hover', 'font');
          background-color: map-get($layout-header-dropdown, 'hover', 'background');
          border-color: map-get($layout-header-dropdown, 'hover', 'border');
          @if map-get($layout-header-dropdown, 'hover', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'hover', 'shadow');
          }
        }

        &:enabled:active,
        &:enabled.active {
          color: map-get($layout-header-dropdown, 'active', 'font');
          background-color: map-get($layout-header-dropdown, 'active', 'background');
          border-color: map-get($layout-header-dropdown, 'active', 'border');
          z-index: 25;
          @if map-get($layout-header-dropdown, 'active', 'shadow') != null {
            box-shadow: map-get($layout-header-dropdown, 'active', 'shadow');
          }
        }
      }
    }
  }

  &.active {
    .z-icon {
      &.i-arrow-right {
        @include rotate(-90);
      }
    }
    + .z-dropdown-content {
      visibility: visible;
      display: block;
    }
  }
}

// button group
// (1) button switch group : 버튼 그룹 중 하나의 버튼만 선택
// (2) button toggle group : 버튼 그룹 각 버튼 토글 가능
.z-button-switch-group,
.z-button-toggle-group {

  .z-button-switch,
  .z-button-toggle {

    .z-text { pointer-events: none; }

    .z-icon { pointer-events: none; }
  }
}

// 열속성 > tab 버튼
.z-tab {
  color: map-get($button-tab, 'default', 'font');
  background-color: map-get($button-tab, 'default', 'background');
  border-color: map-get($button-tab, 'default', 'border');
  border-width: 0.0625rem; //1px
  @if map-get($button-tab, 'default', 'shadow') != null {
    box-shadow: map-get($button-tab, 'default', 'shadow');
  }
  .z-icon {
    background: map-get($button-tab, 'default', 'font');
  }

  &:focus {
    outline: 0;
    color: map-get($button-tab, 'focus', 'font');
    background-color: map-get($button-tab, 'focus', 'background');
    border-color: map-get($button-tab, 'focus', 'border');
    @if map-get($button-tab, 'focus', 'shadow') != null {
      box-shadow: map-get($button-tab, 'focus', 'shadow');
    }
    .z-icon {
      background: map-get($button-tab, 'focus', 'font');
    }
  }

  &:hover {
    outline: 0;
    color: map-get($button-tab, 'hover', 'font');
    background-color: map-get($button-tab, 'hover', 'background');
    border-color: map-get($button-tab, 'hover', 'border');
    @if map-get($button-tab, 'hover', 'shadow') != null {
      box-shadow: map-get($button-tab, 'hover', 'shadow');
    }
    .z-icon {
      background: map-get($button-tab, 'hover', 'font');
    }
  }

  &:enabled:active,
  &:enabled.active {
    color: map-get($button-tab, 'active', 'font');
    background-color: map-get($button-tab, 'active', 'background');
    border-color: map-get($button-tab, 'active', 'border');
    z-index: 25;
    @if map-get($button-tab, 'active', 'shadow') != null {
      box-shadow: map-get($button-tab, 'active', 'shadow');
    }
    .z-icon {
      background: map-get($button-tab, 'active', 'font');
    }
  }
  // 선택된 경우
  &.selected:not(:disabled),
  &.selected:not(.disabled) {
    color: map-get($button-tab, 'selected', 'font');
    background-color: map-get($button-tab, 'selected', 'background');
    border-color: map-get($button-tab, 'selected', 'border');
    z-index: 25;
    @if map-get($button-tab, 'selected', 'shadow') != null {
      box-shadow: map-get($button-tab, 'selected', 'shadow');
    }
    .z-icon {
      background: map-get($button-tab, 'selected', 'font');
    }
  }

  &:disabled,
  &.disabled {
    color: map-get($button-tab, 'disabled', 'font');
    background-color: map-get($button-tab, 'disabled', 'background');
    border-color: map-get($button-tab, 'disabled', 'border');
    cursor: default;
    @if map-get($button-tab, 'disabled', 'shadow') != null {
      box-shadow: map-get($button-tab, 'disabled', 'shadow');
    }
    .z-icon {
      background: map-get($button-tab, 'disabled', 'font');
    }
  }
}

.z-button,
.z-button-icon,
.z-button-icon-sm
{
  &:disabled,
  &.disabled {
    display: none;
  }
}

.z-button-icon {
  &.z-button-attach-file {
    .z-icon {
      &.i-folder { background: $gray500; }
    }
  }
  &.z-button-code {
    .z-icon {
      &.i-search { background: $gray500; }
    }
  }
}

.z-button.success--check {
  position: relative;
  border-color: $neutral200;
  background-color: $neutral200;
  color: $gray400;
  &::before {
    @include position(absolute, 0.313rem, null, null, -2rem); // 5px  32px;
    @include backgroundImage('#{$icon-folder-path}alert/icon_alert_success.svg', 100%, no-repeat, 0, 0, null); // 5px
    content: '';
    width: 1.25rem; // 20px
    height: 1.25rem; // 20px
  }
}

.z-switch {
  input[type=checkbox] {
    // 스위치 버튼
    + span {
      // 동그라미
      &::before { top: 0.125rem; } // 2px
    }
  }
}