/* _buttons.scss 
 *
 * 파일 경로 : template/_buttons.scss
 * @description 버튼 디자인
 * @author wdj
 * @version 1.0
 */
// <a class='btn'></a>  or button
.btn, 
button {
  display: inline-block;
  font-family: inherit;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  color: $btn-font-color;
  background-color: $btn-bg-color;
  @include border($btn-border-width, solid, $btn-border-color, all);
  @include borderRadius($btn-border-radius);
  opacity: 1;
  text-align: center;
  text-decoration: none;
  user-select: none;
  white-space: nowrap;
  vertical-align: middle;
  overflow:visible;
  padding: 0.625rem 1.563rem 0.5625rem 1.563rem; // 10px 25px 9px 25px
  cursor: pointer;

  &:focus,
  &:hover {
      outline: 0;
  }
  &:disabled {
    cursor: default;
  }
  // 단일 버튼 (테마별 적용)
  @each $theme, $value in $btn-themes-colors {
    &.#{$theme} {
      color: map-get($value, 'default', 'font');
      background-color: map-get($value, 'default', 'background');
      border-color: map-get($value, 'default', 'border');
      // 아이콘이 존재한다면
      .icon {
        display: inline-block;
        background: map-get($value, 'default', 'font');
        vertical-align: middle;
      }

      &:focus,
      &:hover {
        color: map-get($value, 'hover', 'font');
        background-color: map-get($value, 'hover', 'background');
        border-color: map-get($value, 'hover', 'border');

        .icon {
          background: map-get($value, 'hover', 'font');
        }
      }

      &:not(:disabled) {
        &:active,
        &.active { // pressed
          color: map-get($value, 'pressed', 'font');
          background-color: map-get($value, 'pressed', 'background');
          border-color: map-get($value, 'pressed', 'border');
          @if $theme == 'point-line' { opacity: 0.3; }

          .icon {
            background: map-get($value, 'pressed', 'font');
          }
        }
      }

      &:disabled {
        color: map-get($value, 'disabled', 'font');
        background-color: map-get($value, 'disabled', 'background');
        border-color: map-get($value, 'disabled', 'border');
        @if $theme == 'default-fill' {
          opacity: 0.5;
        } @else {
          opacity: 0.3;
        }

        .icon {
          background: map-get($value, 'disabled', 'font');
        }
      }
    }
  }
}

// 버튼 그룹
.btn-group {
  position: relative;
  display: inline-flex;
  vertical-align: middle;

  .btn,
  button {
    flex: 1 1 auto;
    font-size: $btn-group-font-size;
    font-weight: $btn-group-font-weight;
    line-height: $btn-group-line-height;
    color: $btn-group-font-color;
    background-color: $btn-group-bg-color;
    @include border($btn-group-border-width, solid, $btn-group-border-color, all);
    @include borderRadius($btn-group-border-radius); // 1px
    // if icon exist
    .icon {
      display: inline-block;
      background: $btn-group-font-color;
      vertical-align: middle;
    }

    &:focus,
    &:hover {
      color: $btn-group-hover-font-color;
      background-color: $btn-group-hover-bg-color;
      border-color: $btn-group-hover-border-color;

      .icon {
        background: $btn-group-hover-font-color;
      }
    }

    &:not(:disabled) {
      &:active,
      &.active { // pressed
        color: $btn-group-pressed-font-color;
        background-color: $btn-group-pressed-bg-color;
        border-color: $btn-group-pressed-border-color;
        z-index: $z-index-event;

        .icon {
          background: $btn-group-pressed-font-color;
        }
      }
    }

    &:disabled {
      color: $btn-group-disabled-font-color;
      background-color: $btn-group-disabled-bg-color;
      border-color: $btn-group-disabled-border-color;

      .icon {
        background: $btn-group-disabled-font-color;
      }
    }
  }
  // rounded corners
  .btn:not(:first-child),
  button:not(:first-child) {
    margin-left: -$btn-group-border-width;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .btn:not(:last-of-type),
  button:not(:last-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  // vertical button toggle group
  &.btn-vertical {
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    
    .btn,
    button {
      flex: 0 1 auto;
      @include borderRadius($btn-group-border-radius); // 1px
    }

    // Prevent double borders when buttons are next to each other
    .btn:not(:first-child),
    button:not(:first-child) {
      margin-left: 0;
      margin-top: -$btn-group-border-width;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      
    }
    .btn:not(:last-of-type), 
    button:not(:last-of-type) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}
// 버튼 그룹 토글
.btn-group-toggle {
  position: relative;
  display: inline-flex;
  vertical-align: middle;

  .btn,
  button {
    flex: 1 1 auto;
    font-size: $btn-group-font-size;
    font-weight: $btn-group-font-weight;
    line-height: $btn-group-line-height;
    color: $btn-group-toggle-font-color;
    background-color: $btn-group-toggle-bg-color;
    @include border($btn-group-border-width, solid, $btn-group-border-color, all);
    @include borderRadius($btn-group-border-radius); // 1px
    // if icon exist
    .icon {
      display: inline-block;
      background: $btn-group-toggle-font-color;
      vertical-align: middle;
    }

    &:focus,
    &:hover {
      color: $btn-group-hover-font-color;
      background-color: $btn-group-hover-bg-color;
      border-color: $btn-group-hover-border-color;

      .icon {
        background: $btn-group-hover-font-color;
      }
    }

    &:not(:disabled) {
      &:active,
      &.active { // pressed
        color: $btn-group-pressed-font-color;
        background-color: $btn-group-pressed-bg-color;
        border-color: $btn-group-pressed-border-color;
        z-index: $z-index-event;

        .icon {
          background: $btn-group-pressed-font-color;
        }
      }
    }

    &:disabled {
      color: $btn-group-disabled-font-color;
      background-color: $btn-group-disabled-bg-color;
      border-color: $btn-group-disabled-border-color;

      .icon {
        background: $btn-group-disabled-font-color;
      }
    }
  }

  // 양 끝 테두리 둥글게
  .btn:not(:first-child),
  button:not(:first-child) {
    margin-left: -$btn-group-border-width;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .btn:not(:last-of-type),
  button:not(:last-of-type) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  // vertical button toggle group
  &.btn-vertical {
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;

    .btn,
    button {
      flex: 0 1 auto;
      @include borderRadius($btn-group-border-radius); // 1px
    }
    // Prevent double borders when buttons are next to each other
    .btn:not(:first-child),
    button:not(:first-child) {
      margin-left: 0;
      margin-top: -$btn-group-border-width;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    .btn:not(:last-of-type), 
    button:not(:last-of-type) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}

// 버튼 리스트
.btn-list {
  display: inline-flex;
  vertical-align: middle;
  position: relative;

  .btn,
  button {
      margin-left: 0.3125rem; // 5px
  }
}
